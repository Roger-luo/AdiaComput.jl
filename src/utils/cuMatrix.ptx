//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19856038
// Cuda compilation tools, release 7.5, V7.5.17
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_20
.address_size 64

	// .globl	_Z7diagexpI7complexEvPT_S2_i
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd
(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
;
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.const .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.const .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};

.visible .func _Z7diagexpI7complexEvPT_S2_i(
	.param .b64 _Z7diagexpI7complexEvPT_S2_i_param_0,
	.param .b64 _Z7diagexpI7complexEvPT_S2_i_param_1,
	.param .b32 _Z7diagexpI7complexEvPT_S2_i_param_2
)
{
	.local .align 4 .b8 	__local_depot0[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<32>;
	.reg .f32 	%f<125>;
	.reg .b32 	%r<192>;
	.reg .b64 	%rd<35>;


	mov.u64 	%rd34, __local_depot0;
	cvta.local.u64 	%SP, %rd34;
	ld.param.u64 	%rd16, [_Z7diagexpI7complexEvPT_S2_i_param_0];
	ld.param.u64 	%rd17, [_Z7diagexpI7complexEvPT_S2_i_param_1];
	ld.param.u32 	%r74, [_Z7diagexpI7complexEvPT_S2_i_param_2];
	add.u64 	%rd18, %SP, 0;
	cvta.to.local.u64 	%rd31, %rd18;
	mov.u32 	%r75, %ntid.x;
	mov.u32 	%r76, %ctaid.x;
	mov.u32 	%r77, %tid.x;
	mad.lo.s32 	%r1, %r75, %r76, %r77;
	setp.ge.s32	%p1, %r1, %r74;
	@%p1 bra 	BB0_46;

	mul.wide.s32 	%rd19, %r1, 8;
	add.s64 	%rd2, %rd16, %rd19;
	ld.f32 	%f41, [%rd2];
	mul.f32 	%f42, %f41, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f43, %f42;
	mov.f32 	%f44, 0fBF317200;
	fma.rn.f32 	%f45, %f43, %f44, %f41;
	mov.f32 	%f46, 0fB5BFBE8E;
	fma.rn.f32 	%f47, %f43, %f46, %f45;
	mul.f32 	%f40, %f47, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f39,%f40;
	// inline asm
	add.f32 	%f48, %f43, 0f00000000;
	ex2.approx.f32 	%f49, %f48;
	mul.f32 	%f50, %f39, %f49;
	setp.lt.f32	%p2, %f41, 0fC2D20000;
	selp.f32	%f51, 0f00000000, %f50, %p2;
	setp.gt.f32	%p3, %f41, 0f42D20000;
	selp.f32	%f1, 0f7F800000, %f51, %p3;
	ld.f32 	%f115, [%rd2+4];
	abs.f32 	%f52, %f115;
	setp.neu.f32	%p4, %f52, 0f7F800000;
	@%p4 bra 	BB0_3;

	mov.f32 	%f53, 0f00000000;
	mul.rn.f32 	%f115, %f115, %f53;

BB0_3:
	mul.f32 	%f54, %f115, 0f3F22F983;
	cvt.rni.s32.f32	%r181, %f54;
	cvt.rn.f32.s32	%f55, %r181;
	neg.f32 	%f56, %f55;
	mov.f32 	%f57, 0f3FC90FDA;
	fma.rn.f32 	%f58, %f56, %f57, %f115;
	mov.f32 	%f59, 0f33A22168;
	fma.rn.f32 	%f60, %f56, %f59, %f58;
	mov.f32 	%f61, 0f27C234C5;
	fma.rn.f32 	%f116, %f56, %f61, %f60;
	abs.f32 	%f62, %f115;
	setp.leu.f32	%p5, %f62, 0f47CE4780;
	@%p5 bra 	BB0_13;

	add.s64 	%rd3, %rd31, 24;
	mov.b32 	 %r3, %f115;
	bfe.u32 	%r80, %r3, 23, 8;
	add.s32 	%r81, %r80, -128;
	shl.b32 	%r82, %r3, 8;
	or.b32  	%r4, %r82, -2147483648;
	shr.u32 	%r5, %r81, 5;
	mov.u32 	%r173, 0;
	mov.u64 	%rd30, __cudart_i2opi_f;
	mov.u32 	%r172, -6;

BB0_5:
	.pragma "nounroll";
	ld.const.u32 	%r85, [%rd30];
	// inline asm
	{
	mad.lo.cc.u32   %r83, %r85, %r4, %r173;
	madc.hi.u32     %r173, %r85, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd31], %r83;
	add.s64 	%rd31, %rd31, 4;
	add.s64 	%rd30, %rd30, 4;
	add.s32 	%r172, %r172, 1;
	setp.ne.s32	%p6, %r172, 0;
	@%p6 bra 	BB0_5;

	and.b32  	%r10, %r3, -2147483648;
	st.local.u32 	[%rd3], %r173;
	bfe.u32 	%r11, %r3, 23, 5;
	mov.u32 	%r88, 6;
	sub.s32 	%r89, %r88, %r5;
	cvta.to.local.u64 	%rd22, %rd18;
	mul.wide.s32 	%rd23, %r89, 4;
	add.s64 	%rd8, %rd22, %rd23;
	ld.local.u32 	%r174, [%rd8];
	ld.local.u32 	%r175, [%rd8+-4];
	setp.eq.s32	%p7, %r11, 0;
	@%p7 bra 	BB0_8;

	mov.u32 	%r90, 32;
	sub.s32 	%r91, %r90, %r11;
	shr.u32 	%r92, %r175, %r91;
	shl.b32 	%r93, %r174, %r11;
	add.s32 	%r174, %r92, %r93;
	ld.local.u32 	%r94, [%rd8+-8];
	shr.u32 	%r95, %r94, %r91;
	shl.b32 	%r96, %r175, %r11;
	add.s32 	%r175, %r95, %r96;

BB0_8:
	shr.u32 	%r97, %r175, 30;
	shl.b32 	%r98, %r174, 2;
	add.s32 	%r176, %r97, %r98;
	shl.b32 	%r19, %r175, 2;
	shr.u32 	%r99, %r176, 31;
	shr.u32 	%r100, %r174, 30;
	add.s32 	%r20, %r99, %r100;
	setp.eq.s32	%p8, %r99, 0;
	mov.u32 	%r177, %r10;
	mov.u32 	%r178, %r19;
	@%p8 bra 	BB0_10;

	not.b32 	%r101, %r176;
	neg.s32 	%r21, %r19;
	setp.eq.s32	%p9, %r19, 0;
	selp.u32	%r102, 1, 0, %p9;
	add.s32 	%r176, %r102, %r101;
	xor.b32  	%r23, %r10, -2147483648;
	mov.u32 	%r177, %r23;
	mov.u32 	%r178, %r21;

BB0_10:
	mov.u32 	%r25, %r177;
	neg.s32 	%r103, %r20;
	setp.eq.s32	%p10, %r10, 0;
	selp.b32	%r181, %r20, %r103, %p10;
	clz.b32 	%r180, %r176;
	setp.eq.s32	%p11, %r180, 0;
	shl.b32 	%r104, %r176, %r180;
	mov.u32 	%r105, 32;
	sub.s32 	%r106, %r105, %r180;
	shr.u32 	%r107, %r178, %r106;
	add.s32 	%r108, %r107, %r104;
	selp.b32	%r29, %r176, %r108, %p11;
	mov.u32 	%r109, -921707870;
	mul.hi.u32 	%r179, %r29, %r109;
	setp.lt.s32	%p12, %r179, 1;
	@%p12 bra 	BB0_12;

	mul.lo.s32 	%r110, %r29, -921707870;
	shr.u32 	%r111, %r110, 31;
	shl.b32 	%r112, %r179, 1;
	add.s32 	%r179, %r111, %r112;
	add.s32 	%r180, %r180, 1;

BB0_12:
	mov.u32 	%r113, 126;
	sub.s32 	%r114, %r113, %r180;
	shl.b32 	%r115, %r114, 23;
	add.s32 	%r116, %r179, 1;
	shr.u32 	%r117, %r116, 7;
	add.s32 	%r118, %r117, 1;
	shr.u32 	%r119, %r118, 1;
	add.s32 	%r120, %r119, %r115;
	or.b32  	%r121, %r120, %r25;
	mov.b32 	 %f116, %r121;

BB0_13:
	mul.rn.f32 	%f8, %f116, %f116;
	add.s32 	%r36, %r181, 1;
	and.b32  	%r37, %r36, 1;
	setp.eq.s32	%p13, %r37, 0;
	@%p13 bra 	BB0_15;

	mov.f32 	%f63, 0fBAB6061A;
	mov.f32 	%f64, 0f37CCF5CE;
	fma.rn.f32 	%f117, %f64, %f8, %f63;
	bra.uni 	BB0_16;

BB0_15:
	mov.f32 	%f65, 0f3C08839E;
	mov.f32 	%f66, 0fB94CA1F9;
	fma.rn.f32 	%f117, %f66, %f8, %f65;

BB0_16:
	@%p13 bra 	BB0_18;

	mov.f32 	%f67, 0f3D2AAAA5;
	fma.rn.f32 	%f68, %f117, %f8, %f67;
	mov.f32 	%f69, 0fBF000000;
	fma.rn.f32 	%f118, %f68, %f8, %f69;
	bra.uni 	BB0_19;

BB0_18:
	mov.f32 	%f70, 0fBE2AAAA3;
	fma.rn.f32 	%f71, %f117, %f8, %f70;
	mov.f32 	%f72, 0f00000000;
	fma.rn.f32 	%f118, %f71, %f8, %f72;

BB0_19:
	fma.rn.f32 	%f119, %f118, %f116, %f116;
	@%p13 bra 	BB0_21;

	mov.f32 	%f73, 0f3F800000;
	fma.rn.f32 	%f119, %f118, %f8, %f73;

BB0_21:
	and.b32  	%r122, %r36, 2;
	setp.eq.s32	%p16, %r122, 0;
	@%p16 bra 	BB0_23;

	mov.f32 	%f74, 0f00000000;
	mov.f32 	%f75, 0fBF800000;
	fma.rn.f32 	%f119, %f119, %f75, %f74;

BB0_23:
	add.s64 	%rd9, %rd17, %rd19;
	mul.f32 	%f78, %f1, %f119;
	st.f32 	[%rd9], %f78;
	ld.f32 	%f79, [%rd2];
	mul.f32 	%f80, %f79, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f81, %f80;
	fma.rn.f32 	%f83, %f81, %f44, %f79;
	fma.rn.f32 	%f85, %f81, %f46, %f83;
	mul.f32 	%f77, %f85, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f76,%f77;
	// inline asm
	add.f32 	%f86, %f81, 0f00000000;
	ex2.approx.f32 	%f87, %f86;
	mul.f32 	%f88, %f76, %f87;
	setp.lt.f32	%p17, %f79, 0fC2D20000;
	selp.f32	%f89, 0f00000000, %f88, %p17;
	setp.gt.f32	%p18, %f79, 0f42D20000;
	selp.f32	%f20, 0f7F800000, %f89, %p18;
	ld.f32 	%f120, [%rd2+4];
	abs.f32 	%f90, %f120;
	setp.neu.f32	%p19, %f90, 0f7F800000;
	@%p19 bra 	BB0_25;

	mov.f32 	%f91, 0f00000000;
	mul.rn.f32 	%f120, %f120, %f91;

BB0_25:
	mul.f32 	%f92, %f120, 0f3F22F983;
	cvt.rni.s32.f32	%r191, %f92;
	cvt.rn.f32.s32	%f93, %r191;
	neg.f32 	%f94, %f93;
	fma.rn.f32 	%f96, %f94, %f57, %f120;
	fma.rn.f32 	%f98, %f94, %f59, %f96;
	fma.rn.f32 	%f121, %f94, %f61, %f98;
	abs.f32 	%f100, %f120;
	setp.leu.f32	%p20, %f100, 0f47CE4780;
	@%p20 bra 	BB0_35;

	mov.b32 	 %r39, %f120;
	shr.u32 	%r40, %r39, 23;
	bfe.u32 	%r129, %r39, 23, 8;
	add.s32 	%r130, %r129, -128;
	shl.b32 	%r131, %r39, 8;
	or.b32  	%r41, %r131, -2147483648;
	shr.u32 	%r42, %r130, 5;
	cvta.to.local.u64 	%rd33, %rd18;
	mov.u32 	%r183, 0;
	mov.u64 	%rd32, __cudart_i2opi_f;
	mov.u32 	%r182, -6;

BB0_27:
	.pragma "nounroll";
	ld.const.u32 	%r134, [%rd32];
	// inline asm
	{
	mad.lo.cc.u32   %r132, %r134, %r41, %r183;
	madc.hi.u32     %r183, %r134, %r41,  0;
	}
	// inline asm
	st.local.u32 	[%rd33], %r132;
	add.s64 	%rd33, %rd33, 4;
	add.s64 	%rd32, %rd32, 4;
	add.s32 	%r182, %r182, 1;
	setp.ne.s32	%p21, %r182, 0;
	@%p21 bra 	BB0_27;

	and.b32  	%r47, %r39, -2147483648;
	cvta.to.local.u64 	%rd28, %rd18;
	st.local.u32 	[%rd28+24], %r183;
	mov.u32 	%r137, 6;
	sub.s32 	%r138, %r137, %r42;
	mul.wide.s32 	%rd29, %r138, 4;
	add.s64 	%rd15, %rd28, %rd29;
	ld.local.u32 	%r184, [%rd15];
	ld.local.u32 	%r185, [%rd15+-4];
	and.b32  	%r50, %r40, 31;
	setp.eq.s32	%p22, %r50, 0;
	@%p22 bra 	BB0_30;

	mov.u32 	%r139, 32;
	sub.s32 	%r140, %r139, %r50;
	shr.u32 	%r141, %r185, %r140;
	shl.b32 	%r142, %r184, %r50;
	add.s32 	%r184, %r141, %r142;
	ld.local.u32 	%r143, [%rd15+-8];
	shr.u32 	%r144, %r143, %r140;
	shl.b32 	%r145, %r185, %r50;
	add.s32 	%r185, %r144, %r145;

BB0_30:
	shr.u32 	%r146, %r185, 30;
	shl.b32 	%r147, %r184, 2;
	add.s32 	%r186, %r146, %r147;
	shl.b32 	%r56, %r185, 2;
	shr.u32 	%r148, %r186, 31;
	shr.u32 	%r149, %r184, 30;
	add.s32 	%r57, %r148, %r149;
	setp.eq.s32	%p23, %r148, 0;
	mov.u32 	%r187, %r47;
	mov.u32 	%r188, %r56;
	@%p23 bra 	BB0_32;

	not.b32 	%r150, %r186;
	neg.s32 	%r58, %r56;
	setp.eq.s32	%p24, %r56, 0;
	selp.u32	%r151, 1, 0, %p24;
	add.s32 	%r186, %r151, %r150;
	xor.b32  	%r60, %r47, -2147483648;
	mov.u32 	%r187, %r60;
	mov.u32 	%r188, %r58;

BB0_32:
	mov.u32 	%r62, %r187;
	neg.s32 	%r152, %r57;
	setp.eq.s32	%p25, %r47, 0;
	selp.b32	%r191, %r57, %r152, %p25;
	clz.b32 	%r190, %r186;
	setp.eq.s32	%p26, %r190, 0;
	shl.b32 	%r153, %r186, %r190;
	mov.u32 	%r154, 32;
	sub.s32 	%r155, %r154, %r190;
	shr.u32 	%r156, %r188, %r155;
	add.s32 	%r157, %r156, %r153;
	selp.b32	%r66, %r186, %r157, %p26;
	mov.u32 	%r158, -921707870;
	mul.hi.u32 	%r189, %r66, %r158;
	setp.lt.s32	%p27, %r189, 1;
	@%p27 bra 	BB0_34;

	mul.lo.s32 	%r159, %r66, -921707870;
	shr.u32 	%r160, %r159, 31;
	shl.b32 	%r161, %r189, 1;
	add.s32 	%r189, %r160, %r161;
	add.s32 	%r190, %r190, 1;

BB0_34:
	mov.u32 	%r162, 126;
	sub.s32 	%r163, %r162, %r190;
	shl.b32 	%r164, %r163, 23;
	add.s32 	%r165, %r189, 1;
	shr.u32 	%r166, %r165, 7;
	add.s32 	%r167, %r166, 1;
	shr.u32 	%r168, %r167, 1;
	add.s32 	%r169, %r168, %r164;
	or.b32  	%r170, %r169, %r62;
	mov.b32 	 %f121, %r170;

BB0_35:
	mul.rn.f32 	%f27, %f121, %f121;
	and.b32  	%r73, %r191, 1;
	setp.eq.s32	%p28, %r73, 0;
	@%p28 bra 	BB0_37;

	mov.f32 	%f101, 0fBAB6061A;
	mov.f32 	%f102, 0f37CCF5CE;
	fma.rn.f32 	%f122, %f102, %f27, %f101;
	bra.uni 	BB0_38;

BB0_37:
	mov.f32 	%f103, 0f3C08839E;
	mov.f32 	%f104, 0fB94CA1F9;
	fma.rn.f32 	%f122, %f104, %f27, %f103;

BB0_38:
	@%p28 bra 	BB0_40;

	mov.f32 	%f105, 0f3D2AAAA5;
	fma.rn.f32 	%f106, %f122, %f27, %f105;
	mov.f32 	%f107, 0fBF000000;
	fma.rn.f32 	%f123, %f106, %f27, %f107;
	bra.uni 	BB0_41;

BB0_40:
	mov.f32 	%f108, 0fBE2AAAA3;
	fma.rn.f32 	%f109, %f122, %f27, %f108;
	mov.f32 	%f110, 0f00000000;
	fma.rn.f32 	%f123, %f109, %f27, %f110;

BB0_41:
	fma.rn.f32 	%f124, %f123, %f121, %f121;
	@%p28 bra 	BB0_43;

	mov.f32 	%f111, 0f3F800000;
	fma.rn.f32 	%f124, %f123, %f27, %f111;

BB0_43:
	and.b32  	%r171, %r191, 2;
	setp.eq.s32	%p31, %r171, 0;
	@%p31 bra 	BB0_45;

	mov.f32 	%f112, 0f00000000;
	mov.f32 	%f113, 0fBF800000;
	fma.rn.f32 	%f124, %f124, %f113, %f112;

BB0_45:
	mul.f32 	%f114, %f20, %f124;
	st.f32 	[%rd9+4], %f114;

BB0_46:
	ret;
}

	// .globl	_Z7diagexpI13complexDoubleEvPT_S2_i
.visible .func _Z7diagexpI13complexDoubleEvPT_S2_i(
	.param .b64 _Z7diagexpI13complexDoubleEvPT_S2_i_param_0,
	.param .b64 _Z7diagexpI13complexDoubleEvPT_S2_i_param_1,
	.param .b32 _Z7diagexpI13complexDoubleEvPT_S2_i_param_2
)
{
	.local .align 4 .b8 	__local_depot1[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<16>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<59>;
	.reg .f64 	%fd<185>;
	.reg .b64 	%rd<22>;


	mov.u64 	%rd21, __local_depot1;
	cvta.local.u64 	%SP, %rd21;
	ld.param.u64 	%rd3, [_Z7diagexpI13complexDoubleEvPT_S2_i_param_0];
	ld.param.u64 	%rd4, [_Z7diagexpI13complexDoubleEvPT_S2_i_param_1];
	ld.param.u32 	%r15, [_Z7diagexpI13complexDoubleEvPT_S2_i_param_2];
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r16, %r17, %r18;
	setp.ge.s32	%p1, %r1, %r15;
	@%p1 bra 	BB1_24;

	mul.wide.s32 	%rd5, %r1, 16;
	add.s64 	%rd1, %rd3, %rd5;
	ld.f64 	%fd1, [%rd1];
	mov.f64 	%fd37, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd38, %fd1, %fd37;
	mov.f64 	%fd39, 0d4338000000000000;
	add.rn.f64 	%fd40, %fd38, %fd39;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2, %temp}, %fd40;
	}
	mov.f64 	%fd41, 0dC338000000000000;
	add.rn.f64 	%fd42, %fd40, %fd41;
	mov.f64 	%fd43, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd44, %fd42, %fd43, %fd1;
	mov.f64 	%fd45, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd46, %fd42, %fd45, %fd44;
	mov.f64 	%fd47, 0d3E928AF3FCA213EA;
	mov.f64 	%fd48, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd49, %fd48, %fd46, %fd47;
	mov.f64 	%fd50, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd51, %fd49, %fd46, %fd50;
	mov.f64 	%fd52, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd53, %fd51, %fd46, %fd52;
	mov.f64 	%fd54, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd55, %fd53, %fd46, %fd54;
	mov.f64 	%fd56, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd57, %fd55, %fd46, %fd56;
	mov.f64 	%fd58, 0d3F81111111122322;
	fma.rn.f64 	%fd59, %fd57, %fd46, %fd58;
	mov.f64 	%fd60, 0d3FA55555555502A1;
	fma.rn.f64 	%fd61, %fd59, %fd46, %fd60;
	mov.f64 	%fd62, 0d3FC5555555555511;
	fma.rn.f64 	%fd63, %fd61, %fd46, %fd62;
	mov.f64 	%fd64, 0d3FE000000000000B;
	fma.rn.f64 	%fd65, %fd63, %fd46, %fd64;
	mov.f64 	%fd66, 0d3FF0000000000000;
	fma.rn.f64 	%fd67, %fd65, %fd46, %fd66;
	fma.rn.f64 	%fd68, %fd67, %fd46, %fd66;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3, %temp}, %fd68;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd68;
	}
	shl.b32 	%r19, %r2, 20;
	add.s32 	%r20, %r4, %r19;
	mov.b64 	%fd177, {%r3, %r20};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r21}, %fd1;
	}
	mov.b32 	 %f3, %r21;
	abs.f32 	%f1, %f3;
	setp.lt.f32	%p2, %f1, 0f4086232B;
	@%p2 bra 	BB1_4;

	setp.lt.f64	%p3, %fd1, 0d0000000000000000;
	add.f64 	%fd69, %fd1, 0d7FF0000000000000;
	selp.f64	%fd177, 0d0000000000000000, %fd69, %p3;
	setp.geu.f32	%p4, %f1, 0f40874800;
	@%p4 bra 	BB1_4;

	shr.u32 	%r22, %r2, 31;
	add.s32 	%r23, %r2, %r22;
	shr.s32 	%r24, %r23, 1;
	shl.b32 	%r25, %r24, 20;
	add.s32 	%r26, %r25, %r4;
	mov.b64 	%fd70, {%r3, %r26};
	sub.s32 	%r27, %r2, %r24;
	shl.b32 	%r28, %r27, 20;
	add.s32 	%r29, %r28, 1072693248;
	mov.u32 	%r30, 0;
	mov.b64 	%fd71, {%r30, %r29};
	mul.f64 	%fd177, %fd70, %fd71;

BB1_4:
	ld.f64 	%fd178, [%rd1+8];
	abs.f64 	%fd72, %fd178;
	setp.neu.f64	%p5, %fd72, 0d7FF0000000000000;
	@%p5 bra 	BB1_6;

	mov.f64 	%fd73, 0d0000000000000000;
	mul.rn.f64 	%fd178, %fd178, %fd73;

BB1_6:
	mul.f64 	%fd74, %fd178, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r57, %fd74;
	add.u64 	%rd6, %SP, 4;
	cvta.to.local.u64 	%rd7, %rd6;
	st.local.u32 	[%rd7], %r57;
	cvt.rn.f64.s32	%fd75, %r57;
	neg.f64 	%fd76, %fd75;
	mov.f64 	%fd77, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd78, %fd76, %fd77, %fd178;
	mov.f64 	%fd79, 0d3C91A62633145C00;
	fma.rn.f64 	%fd80, %fd76, %fd79, %fd78;
	mov.f64 	%fd81, 0d397B839A252049C0;
	fma.rn.f64 	%fd179, %fd76, %fd81, %fd80;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r31}, %fd178;
	}
	and.b32  	%r32, %r31, 2145386496;
	setp.lt.u32	%p6, %r32, 1105199104;
	@%p6 bra 	BB1_8;

	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd178;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd179, [retval0+0];
	
	//{
	}// Callseq End 0
	ld.local.u32 	%r57, [%rd7];

BB1_8:
	add.s32 	%r8, %r57, 1;
	and.b32  	%r33, %r8, 1;
	shl.b32 	%r34, %r33, 3;
	setp.eq.s32	%p7, %r33, 0;
	selp.f64	%fd82, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p7;
	mul.wide.u32 	%rd10, %r34, 8;
	mov.u64 	%rd11, __cudart_sin_cos_coeffs;
	add.s64 	%rd12, %rd10, %rd11;
	ld.const.f64 	%fd83, [%rd12+8];
	mul.rn.f64 	%fd12, %fd179, %fd179;
	fma.rn.f64 	%fd84, %fd82, %fd12, %fd83;
	ld.const.f64 	%fd85, [%rd12+16];
	fma.rn.f64 	%fd86, %fd84, %fd12, %fd85;
	ld.const.f64 	%fd87, [%rd12+24];
	fma.rn.f64 	%fd88, %fd86, %fd12, %fd87;
	ld.const.f64 	%fd89, [%rd12+32];
	fma.rn.f64 	%fd90, %fd88, %fd12, %fd89;
	ld.const.f64 	%fd91, [%rd12+40];
	fma.rn.f64 	%fd92, %fd90, %fd12, %fd91;
	ld.const.f64 	%fd93, [%rd12+48];
	fma.rn.f64 	%fd13, %fd92, %fd12, %fd93;
	fma.rn.f64 	%fd180, %fd13, %fd179, %fd179;
	@%p7 bra 	BB1_10;

	fma.rn.f64 	%fd180, %fd13, %fd12, %fd66;

BB1_10:
	and.b32  	%r35, %r8, 2;
	setp.eq.s32	%p8, %r35, 0;
	@%p8 bra 	BB1_12;

	mov.f64 	%fd95, 0d0000000000000000;
	mov.f64 	%fd96, 0dBFF0000000000000;
	fma.rn.f64 	%fd180, %fd180, %fd96, %fd95;

BB1_12:
	mov.f64 	%fd176, 0d3FE000000000000B;
	mov.f64 	%fd175, 0d3FC5555555555511;
	mov.f64 	%fd171, 0d3FA55555555502A1;
	mov.f64 	%fd170, 0d3F81111111122322;
	mov.f64 	%fd169, 0d3F56C16C1852B7AF;
	mov.f64 	%fd168, 0d3F2A01A014761F65;
	mov.f64 	%fd167, 0d3EFA01997C89EB71;
	mov.f64 	%fd166, 0d3EC71DEE62401315;
	mov.f64 	%fd165, 0d3E928AF3FCA213EA;
	mov.f64 	%fd164, 0d3E5ADE1569CE2BDF;
	mov.f64 	%fd163, 0dBC7ABC9E3B39803F;
	mov.f64 	%fd162, 0dBFE62E42FEFA39EF;
	mov.f64 	%fd161, 0dC338000000000000;
	mov.f64 	%fd160, 0d4338000000000000;
	mov.f64 	%fd159, 0d3FF71547652B82FE;
	add.s64 	%rd2, %rd4, %rd5;
	mul.f64 	%fd97, %fd177, %fd180;
	st.f64 	[%rd2], %fd97;
	ld.f64 	%fd19, [%rd1];
	mul.rn.f64 	%fd99, %fd19, %fd159;
	add.rn.f64 	%fd101, %fd99, %fd160;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9, %temp}, %fd101;
	}
	add.rn.f64 	%fd103, %fd101, %fd161;
	fma.rn.f64 	%fd105, %fd103, %fd162, %fd19;
	fma.rn.f64 	%fd107, %fd103, %fd163, %fd105;
	fma.rn.f64 	%fd110, %fd164, %fd107, %fd165;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd166;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd167;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd168;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd169;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd170;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd171;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd175;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd176;
	fma.rn.f64 	%fd128, %fd126, %fd107, %fd66;
	fma.rn.f64 	%fd129, %fd128, %fd107, %fd66;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r10, %temp}, %fd129;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r11}, %fd129;
	}
	shl.b32 	%r40, %r9, 20;
	add.s32 	%r41, %r11, %r40;
	mov.b64 	%fd181, {%r10, %r41};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r42}, %fd19;
	}
	mov.b32 	 %f4, %r42;
	abs.f32 	%f2, %f4;
	setp.lt.f32	%p9, %f2, 0f4086232B;
	@%p9 bra 	BB1_15;

	setp.lt.f64	%p10, %fd19, 0d0000000000000000;
	add.f64 	%fd130, %fd19, 0d7FF0000000000000;
	selp.f64	%fd181, 0d0000000000000000, %fd130, %p10;
	setp.geu.f32	%p11, %f2, 0f40874800;
	@%p11 bra 	BB1_15;

	shr.u32 	%r43, %r9, 31;
	add.s32 	%r44, %r9, %r43;
	shr.s32 	%r45, %r44, 1;
	shl.b32 	%r46, %r45, 20;
	add.s32 	%r47, %r46, %r11;
	mov.b64 	%fd131, {%r10, %r47};
	sub.s32 	%r48, %r9, %r45;
	shl.b32 	%r49, %r48, 20;
	add.s32 	%r50, %r49, 1072693248;
	mov.u32 	%r51, 0;
	mov.b64 	%fd132, {%r51, %r50};
	mul.f64 	%fd181, %fd131, %fd132;

BB1_15:
	ld.f64 	%fd182, [%rd1+8];
	abs.f64 	%fd133, %fd182;
	setp.neu.f64	%p12, %fd133, 0d7FF0000000000000;
	@%p12 bra 	BB1_17;

	mov.f64 	%fd134, 0d0000000000000000;
	mul.rn.f64 	%fd182, %fd182, %fd134;

BB1_17:
	mov.f64 	%fd174, 0d397B839A252049C0;
	mov.f64 	%fd173, 0d3C91A62633145C00;
	mov.f64 	%fd172, 0d3FF921FB54442D18;
	mul.f64 	%fd135, %fd182, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r58, %fd135;
	add.u64 	%rd14, %SP, 0;
	cvta.to.local.u64 	%rd15, %rd14;
	st.local.u32 	[%rd15], %r58;
	cvt.rn.f64.s32	%fd136, %r58;
	neg.f64 	%fd137, %fd136;
	fma.rn.f64 	%fd139, %fd137, %fd172, %fd182;
	fma.rn.f64 	%fd141, %fd137, %fd173, %fd139;
	fma.rn.f64 	%fd183, %fd137, %fd174, %fd141;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r52}, %fd182;
	}
	and.b32  	%r53, %r52, 2145386496;
	setp.lt.u32	%p13, %r53, 1105199104;
	@%p13 bra 	BB1_19;

	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd182;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd183, [retval0+0];
	
	//{
	}// Callseq End 1
	ld.local.u32 	%r58, [%rd15];

BB1_19:
	and.b32  	%r54, %r58, 1;
	shl.b32 	%r55, %r54, 3;
	setp.eq.s32	%p14, %r54, 0;
	selp.f64	%fd143, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p14;
	mul.wide.u32 	%rd18, %r55, 8;
	add.s64 	%rd20, %rd18, %rd11;
	ld.const.f64 	%fd144, [%rd20+8];
	mul.rn.f64 	%fd30, %fd183, %fd183;
	fma.rn.f64 	%fd145, %fd143, %fd30, %fd144;
	ld.const.f64 	%fd146, [%rd20+16];
	fma.rn.f64 	%fd147, %fd145, %fd30, %fd146;
	ld.const.f64 	%fd148, [%rd20+24];
	fma.rn.f64 	%fd149, %fd147, %fd30, %fd148;
	ld.const.f64 	%fd150, [%rd20+32];
	fma.rn.f64 	%fd151, %fd149, %fd30, %fd150;
	ld.const.f64 	%fd152, [%rd20+40];
	fma.rn.f64 	%fd153, %fd151, %fd30, %fd152;
	ld.const.f64 	%fd154, [%rd20+48];
	fma.rn.f64 	%fd31, %fd153, %fd30, %fd154;
	fma.rn.f64 	%fd184, %fd31, %fd183, %fd183;
	@%p14 bra 	BB1_21;

	fma.rn.f64 	%fd184, %fd31, %fd30, %fd66;

BB1_21:
	and.b32  	%r56, %r58, 2;
	setp.eq.s32	%p15, %r56, 0;
	@%p15 bra 	BB1_23;

	mov.f64 	%fd156, 0d0000000000000000;
	mov.f64 	%fd157, 0dBFF0000000000000;
	fma.rn.f64 	%fd184, %fd184, %fd157, %fd156;

BB1_23:
	mul.f64 	%fd158, %fd181, %fd184;
	st.f64 	[%rd2+8], %fd158;

BB1_24:
	ret;
}

	// .globl	diagexp_cf
.visible .entry diagexp_cf(
	.param .u64 diagexp_cf_param_0,
	.param .u64 diagexp_cf_param_1,
	.param .u32 diagexp_cf_param_2
)
{
	.local .align 4 .b8 	__local_depot2[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<32>;
	.reg .f32 	%f<125>;
	.reg .b32 	%r<192>;
	.reg .b64 	%rd<36>;


	mov.u64 	%rd35, __local_depot2;
	cvta.local.u64 	%SP, %rd35;
	ld.param.u64 	%rd15, [diagexp_cf_param_0];
	ld.param.u64 	%rd16, [diagexp_cf_param_1];
	ld.param.u32 	%r74, [diagexp_cf_param_2];
	mov.u32 	%r75, %ntid.x;
	mov.u32 	%r76, %ctaid.x;
	mov.u32 	%r77, %tid.x;
	mad.lo.s32 	%r1, %r75, %r76, %r77;
	setp.ge.s32	%p1, %r1, %r74;
	@%p1 bra 	BB2_46;

	cvta.to.global.u64 	%rd17, %rd15;
	add.u64 	%rd18, %SP, 0;
	cvta.to.local.u64 	%rd32, %rd18;
	mul.wide.s32 	%rd19, %r1, 8;
	add.s64 	%rd2, %rd17, %rd19;
	ld.global.f32 	%f41, [%rd2];
	mul.f32 	%f42, %f41, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f43, %f42;
	mov.f32 	%f44, 0fBF317200;
	fma.rn.f32 	%f45, %f43, %f44, %f41;
	mov.f32 	%f46, 0fB5BFBE8E;
	fma.rn.f32 	%f47, %f43, %f46, %f45;
	mul.f32 	%f40, %f47, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f39,%f40;
	// inline asm
	add.f32 	%f48, %f43, 0f00000000;
	ex2.approx.f32 	%f49, %f48;
	mul.f32 	%f50, %f39, %f49;
	setp.lt.f32	%p2, %f41, 0fC2D20000;
	selp.f32	%f51, 0f00000000, %f50, %p2;
	setp.gt.f32	%p3, %f41, 0f42D20000;
	selp.f32	%f1, 0f7F800000, %f51, %p3;
	ld.global.f32 	%f115, [%rd2+4];
	abs.f32 	%f52, %f115;
	setp.neu.f32	%p4, %f52, 0f7F800000;
	@%p4 bra 	BB2_3;

	mov.f32 	%f53, 0f00000000;
	mul.rn.f32 	%f115, %f115, %f53;

BB2_3:
	mul.f32 	%f54, %f115, 0f3F22F983;
	cvt.rni.s32.f32	%r181, %f54;
	cvt.rn.f32.s32	%f55, %r181;
	neg.f32 	%f56, %f55;
	mov.f32 	%f57, 0f3FC90FDA;
	fma.rn.f32 	%f58, %f56, %f57, %f115;
	mov.f32 	%f59, 0f33A22168;
	fma.rn.f32 	%f60, %f56, %f59, %f58;
	mov.f32 	%f61, 0f27C234C5;
	fma.rn.f32 	%f116, %f56, %f61, %f60;
	abs.f32 	%f62, %f115;
	setp.leu.f32	%p5, %f62, 0f47CE4780;
	@%p5 bra 	BB2_13;

	mov.b32 	 %r3, %f115;
	bfe.u32 	%r80, %r3, 23, 8;
	add.s32 	%r81, %r80, -128;
	shl.b32 	%r82, %r3, 8;
	or.b32  	%r4, %r82, -2147483648;
	shr.u32 	%r5, %r81, 5;
	mov.u32 	%r173, 0;
	mov.u64 	%rd31, __cudart_i2opi_f;
	mov.u32 	%r172, -6;

BB2_5:
	.pragma "nounroll";
	ld.const.u32 	%r85, [%rd31];
	// inline asm
	{
	mad.lo.cc.u32   %r83, %r85, %r4, %r173;
	madc.hi.u32     %r173, %r85, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd32], %r83;
	add.s64 	%rd32, %rd32, 4;
	add.s64 	%rd31, %rd31, 4;
	add.s32 	%r172, %r172, 1;
	setp.ne.s32	%p6, %r172, 0;
	@%p6 bra 	BB2_5;

	and.b32  	%r10, %r3, -2147483648;
	cvta.to.local.u64 	%rd22, %rd18;
	st.local.u32 	[%rd22+24], %r173;
	bfe.u32 	%r11, %r3, 23, 5;
	mov.u32 	%r88, 6;
	sub.s32 	%r89, %r88, %r5;
	mul.wide.s32 	%rd23, %r89, 4;
	add.s64 	%rd7, %rd22, %rd23;
	ld.local.u32 	%r174, [%rd7];
	ld.local.u32 	%r175, [%rd7+-4];
	setp.eq.s32	%p7, %r11, 0;
	@%p7 bra 	BB2_8;

	mov.u32 	%r90, 32;
	sub.s32 	%r91, %r90, %r11;
	shr.u32 	%r92, %r175, %r91;
	shl.b32 	%r93, %r174, %r11;
	add.s32 	%r174, %r92, %r93;
	ld.local.u32 	%r94, [%rd7+-8];
	shr.u32 	%r95, %r94, %r91;
	shl.b32 	%r96, %r175, %r11;
	add.s32 	%r175, %r95, %r96;

BB2_8:
	shr.u32 	%r97, %r175, 30;
	shl.b32 	%r98, %r174, 2;
	add.s32 	%r176, %r97, %r98;
	shl.b32 	%r19, %r175, 2;
	shr.u32 	%r99, %r176, 31;
	shr.u32 	%r100, %r174, 30;
	add.s32 	%r20, %r99, %r100;
	setp.eq.s32	%p8, %r99, 0;
	mov.u32 	%r177, %r10;
	mov.u32 	%r178, %r19;
	@%p8 bra 	BB2_10;

	not.b32 	%r101, %r176;
	neg.s32 	%r21, %r19;
	setp.eq.s32	%p9, %r19, 0;
	selp.u32	%r102, 1, 0, %p9;
	add.s32 	%r176, %r102, %r101;
	xor.b32  	%r23, %r10, -2147483648;
	mov.u32 	%r177, %r23;
	mov.u32 	%r178, %r21;

BB2_10:
	mov.u32 	%r25, %r177;
	neg.s32 	%r103, %r20;
	setp.eq.s32	%p10, %r10, 0;
	selp.b32	%r181, %r20, %r103, %p10;
	clz.b32 	%r180, %r176;
	setp.eq.s32	%p11, %r180, 0;
	shl.b32 	%r104, %r176, %r180;
	mov.u32 	%r105, 32;
	sub.s32 	%r106, %r105, %r180;
	shr.u32 	%r107, %r178, %r106;
	add.s32 	%r108, %r107, %r104;
	selp.b32	%r29, %r176, %r108, %p11;
	mov.u32 	%r109, -921707870;
	mul.hi.u32 	%r179, %r29, %r109;
	setp.lt.s32	%p12, %r179, 1;
	@%p12 bra 	BB2_12;

	mul.lo.s32 	%r110, %r29, -921707870;
	shr.u32 	%r111, %r110, 31;
	shl.b32 	%r112, %r179, 1;
	add.s32 	%r179, %r111, %r112;
	add.s32 	%r180, %r180, 1;

BB2_12:
	mov.u32 	%r113, 126;
	sub.s32 	%r114, %r113, %r180;
	shl.b32 	%r115, %r114, 23;
	add.s32 	%r116, %r179, 1;
	shr.u32 	%r117, %r116, 7;
	add.s32 	%r118, %r117, 1;
	shr.u32 	%r119, %r118, 1;
	add.s32 	%r120, %r119, %r115;
	or.b32  	%r121, %r120, %r25;
	mov.b32 	 %f116, %r121;

BB2_13:
	mul.rn.f32 	%f8, %f116, %f116;
	add.s32 	%r36, %r181, 1;
	and.b32  	%r37, %r36, 1;
	setp.eq.s32	%p13, %r37, 0;
	@%p13 bra 	BB2_15;

	mov.f32 	%f63, 0fBAB6061A;
	mov.f32 	%f64, 0f37CCF5CE;
	fma.rn.f32 	%f117, %f64, %f8, %f63;
	bra.uni 	BB2_16;

BB2_15:
	mov.f32 	%f65, 0f3C08839E;
	mov.f32 	%f66, 0fB94CA1F9;
	fma.rn.f32 	%f117, %f66, %f8, %f65;

BB2_16:
	@%p13 bra 	BB2_18;

	mov.f32 	%f67, 0f3D2AAAA5;
	fma.rn.f32 	%f68, %f117, %f8, %f67;
	mov.f32 	%f69, 0fBF000000;
	fma.rn.f32 	%f118, %f68, %f8, %f69;
	bra.uni 	BB2_19;

BB2_18:
	mov.f32 	%f70, 0fBE2AAAA3;
	fma.rn.f32 	%f71, %f117, %f8, %f70;
	mov.f32 	%f72, 0f00000000;
	fma.rn.f32 	%f118, %f71, %f8, %f72;

BB2_19:
	fma.rn.f32 	%f119, %f118, %f116, %f116;
	@%p13 bra 	BB2_21;

	mov.f32 	%f73, 0f3F800000;
	fma.rn.f32 	%f119, %f118, %f8, %f73;

BB2_21:
	and.b32  	%r122, %r36, 2;
	setp.eq.s32	%p16, %r122, 0;
	@%p16 bra 	BB2_23;

	mov.f32 	%f74, 0f00000000;
	mov.f32 	%f75, 0fBF800000;
	fma.rn.f32 	%f119, %f119, %f75, %f74;

BB2_23:
	cvta.to.global.u64 	%rd24, %rd16;
	add.s64 	%rd8, %rd24, %rd19;
	mul.f32 	%f78, %f1, %f119;
	st.global.f32 	[%rd8], %f78;
	ld.global.f32 	%f79, [%rd2];
	mul.f32 	%f80, %f79, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f81, %f80;
	fma.rn.f32 	%f83, %f81, %f44, %f79;
	fma.rn.f32 	%f85, %f81, %f46, %f83;
	mul.f32 	%f77, %f85, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f76,%f77;
	// inline asm
	add.f32 	%f86, %f81, 0f00000000;
	ex2.approx.f32 	%f87, %f86;
	mul.f32 	%f88, %f76, %f87;
	setp.lt.f32	%p17, %f79, 0fC2D20000;
	selp.f32	%f89, 0f00000000, %f88, %p17;
	setp.gt.f32	%p18, %f79, 0f42D20000;
	selp.f32	%f20, 0f7F800000, %f89, %p18;
	ld.global.f32 	%f120, [%rd2+4];
	abs.f32 	%f90, %f120;
	setp.neu.f32	%p19, %f90, 0f7F800000;
	@%p19 bra 	BB2_25;

	mov.f32 	%f91, 0f00000000;
	mul.rn.f32 	%f120, %f120, %f91;

BB2_25:
	mul.f32 	%f92, %f120, 0f3F22F983;
	cvt.rni.s32.f32	%r191, %f92;
	cvt.rn.f32.s32	%f93, %r191;
	neg.f32 	%f94, %f93;
	fma.rn.f32 	%f96, %f94, %f57, %f120;
	fma.rn.f32 	%f98, %f94, %f59, %f96;
	fma.rn.f32 	%f121, %f94, %f61, %f98;
	abs.f32 	%f100, %f120;
	setp.leu.f32	%p20, %f100, 0f47CE4780;
	@%p20 bra 	BB2_35;

	mov.b32 	 %r39, %f120;
	shr.u32 	%r40, %r39, 23;
	bfe.u32 	%r129, %r39, 23, 8;
	add.s32 	%r130, %r129, -128;
	shl.b32 	%r131, %r39, 8;
	or.b32  	%r41, %r131, -2147483648;
	shr.u32 	%r42, %r130, 5;
	cvta.to.local.u64 	%rd34, %rd18;
	mov.u32 	%r183, 0;
	mov.u64 	%rd33, __cudart_i2opi_f;
	mov.u32 	%r182, -6;

BB2_27:
	.pragma "nounroll";
	ld.const.u32 	%r134, [%rd33];
	// inline asm
	{
	mad.lo.cc.u32   %r132, %r134, %r41, %r183;
	madc.hi.u32     %r183, %r134, %r41,  0;
	}
	// inline asm
	st.local.u32 	[%rd34], %r132;
	add.s64 	%rd34, %rd34, 4;
	add.s64 	%rd33, %rd33, 4;
	add.s32 	%r182, %r182, 1;
	setp.ne.s32	%p21, %r182, 0;
	@%p21 bra 	BB2_27;

	and.b32  	%r47, %r39, -2147483648;
	cvta.to.local.u64 	%rd29, %rd18;
	st.local.u32 	[%rd29+24], %r183;
	mov.u32 	%r137, 6;
	sub.s32 	%r138, %r137, %r42;
	mul.wide.s32 	%rd30, %r138, 4;
	add.s64 	%rd14, %rd29, %rd30;
	ld.local.u32 	%r184, [%rd14];
	ld.local.u32 	%r185, [%rd14+-4];
	and.b32  	%r50, %r40, 31;
	setp.eq.s32	%p22, %r50, 0;
	@%p22 bra 	BB2_30;

	mov.u32 	%r139, 32;
	sub.s32 	%r140, %r139, %r50;
	shr.u32 	%r141, %r185, %r140;
	shl.b32 	%r142, %r184, %r50;
	add.s32 	%r184, %r141, %r142;
	ld.local.u32 	%r143, [%rd14+-8];
	shr.u32 	%r144, %r143, %r140;
	shl.b32 	%r145, %r185, %r50;
	add.s32 	%r185, %r144, %r145;

BB2_30:
	shr.u32 	%r146, %r185, 30;
	shl.b32 	%r147, %r184, 2;
	add.s32 	%r186, %r146, %r147;
	shl.b32 	%r56, %r185, 2;
	shr.u32 	%r148, %r186, 31;
	shr.u32 	%r149, %r184, 30;
	add.s32 	%r57, %r148, %r149;
	setp.eq.s32	%p23, %r148, 0;
	mov.u32 	%r187, %r47;
	mov.u32 	%r188, %r56;
	@%p23 bra 	BB2_32;

	not.b32 	%r150, %r186;
	neg.s32 	%r58, %r56;
	setp.eq.s32	%p24, %r56, 0;
	selp.u32	%r151, 1, 0, %p24;
	add.s32 	%r186, %r151, %r150;
	xor.b32  	%r60, %r47, -2147483648;
	mov.u32 	%r187, %r60;
	mov.u32 	%r188, %r58;

BB2_32:
	mov.u32 	%r62, %r187;
	neg.s32 	%r152, %r57;
	setp.eq.s32	%p25, %r47, 0;
	selp.b32	%r191, %r57, %r152, %p25;
	clz.b32 	%r190, %r186;
	setp.eq.s32	%p26, %r190, 0;
	shl.b32 	%r153, %r186, %r190;
	mov.u32 	%r154, 32;
	sub.s32 	%r155, %r154, %r190;
	shr.u32 	%r156, %r188, %r155;
	add.s32 	%r157, %r156, %r153;
	selp.b32	%r66, %r186, %r157, %p26;
	mov.u32 	%r158, -921707870;
	mul.hi.u32 	%r189, %r66, %r158;
	setp.lt.s32	%p27, %r189, 1;
	@%p27 bra 	BB2_34;

	mul.lo.s32 	%r159, %r66, -921707870;
	shr.u32 	%r160, %r159, 31;
	shl.b32 	%r161, %r189, 1;
	add.s32 	%r189, %r160, %r161;
	add.s32 	%r190, %r190, 1;

BB2_34:
	mov.u32 	%r162, 126;
	sub.s32 	%r163, %r162, %r190;
	shl.b32 	%r164, %r163, 23;
	add.s32 	%r165, %r189, 1;
	shr.u32 	%r166, %r165, 7;
	add.s32 	%r167, %r166, 1;
	shr.u32 	%r168, %r167, 1;
	add.s32 	%r169, %r168, %r164;
	or.b32  	%r170, %r169, %r62;
	mov.b32 	 %f121, %r170;

BB2_35:
	mul.rn.f32 	%f27, %f121, %f121;
	and.b32  	%r73, %r191, 1;
	setp.eq.s32	%p28, %r73, 0;
	@%p28 bra 	BB2_37;

	mov.f32 	%f101, 0fBAB6061A;
	mov.f32 	%f102, 0f37CCF5CE;
	fma.rn.f32 	%f122, %f102, %f27, %f101;
	bra.uni 	BB2_38;

BB2_37:
	mov.f32 	%f103, 0f3C08839E;
	mov.f32 	%f104, 0fB94CA1F9;
	fma.rn.f32 	%f122, %f104, %f27, %f103;

BB2_38:
	@%p28 bra 	BB2_40;

	mov.f32 	%f105, 0f3D2AAAA5;
	fma.rn.f32 	%f106, %f122, %f27, %f105;
	mov.f32 	%f107, 0fBF000000;
	fma.rn.f32 	%f123, %f106, %f27, %f107;
	bra.uni 	BB2_41;

BB2_40:
	mov.f32 	%f108, 0fBE2AAAA3;
	fma.rn.f32 	%f109, %f122, %f27, %f108;
	mov.f32 	%f110, 0f00000000;
	fma.rn.f32 	%f123, %f109, %f27, %f110;

BB2_41:
	fma.rn.f32 	%f124, %f123, %f121, %f121;
	@%p28 bra 	BB2_43;

	mov.f32 	%f111, 0f3F800000;
	fma.rn.f32 	%f124, %f123, %f27, %f111;

BB2_43:
	and.b32  	%r171, %r191, 2;
	setp.eq.s32	%p31, %r171, 0;
	@%p31 bra 	BB2_45;

	mov.f32 	%f112, 0f00000000;
	mov.f32 	%f113, 0fBF800000;
	fma.rn.f32 	%f124, %f124, %f113, %f112;

BB2_45:
	mul.f32 	%f114, %f20, %f124;
	st.global.f32 	[%rd8+4], %f114;

BB2_46:
	ret;
}

	// .globl	diagexp_df
.visible .entry diagexp_df(
	.param .u64 diagexp_df_param_0,
	.param .u64 diagexp_df_param_1,
	.param .u32 diagexp_df_param_2
)
{
	.local .align 4 .b8 	__local_depot3[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<16>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<59>;
	.reg .f64 	%fd<185>;
	.reg .b64 	%rd<24>;


	mov.u64 	%rd23, __local_depot3;
	cvta.local.u64 	%SP, %rd23;
	ld.param.u64 	%rd3, [diagexp_df_param_0];
	ld.param.u64 	%rd4, [diagexp_df_param_1];
	ld.param.u32 	%r15, [diagexp_df_param_2];
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r16, %r17, %r18;
	setp.ge.s32	%p1, %r1, %r15;
	@%p1 bra 	BB3_24;

	cvta.to.global.u64 	%rd5, %rd3;
	mul.wide.s32 	%rd6, %r1, 16;
	add.s64 	%rd1, %rd5, %rd6;
	ld.global.f64 	%fd1, [%rd1];
	mov.f64 	%fd37, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd38, %fd1, %fd37;
	mov.f64 	%fd39, 0d4338000000000000;
	add.rn.f64 	%fd40, %fd38, %fd39;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r2, %temp}, %fd40;
	}
	mov.f64 	%fd41, 0dC338000000000000;
	add.rn.f64 	%fd42, %fd40, %fd41;
	mov.f64 	%fd43, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd44, %fd42, %fd43, %fd1;
	mov.f64 	%fd45, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd46, %fd42, %fd45, %fd44;
	mov.f64 	%fd47, 0d3E928AF3FCA213EA;
	mov.f64 	%fd48, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd49, %fd48, %fd46, %fd47;
	mov.f64 	%fd50, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd51, %fd49, %fd46, %fd50;
	mov.f64 	%fd52, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd53, %fd51, %fd46, %fd52;
	mov.f64 	%fd54, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd55, %fd53, %fd46, %fd54;
	mov.f64 	%fd56, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd57, %fd55, %fd46, %fd56;
	mov.f64 	%fd58, 0d3F81111111122322;
	fma.rn.f64 	%fd59, %fd57, %fd46, %fd58;
	mov.f64 	%fd60, 0d3FA55555555502A1;
	fma.rn.f64 	%fd61, %fd59, %fd46, %fd60;
	mov.f64 	%fd62, 0d3FC5555555555511;
	fma.rn.f64 	%fd63, %fd61, %fd46, %fd62;
	mov.f64 	%fd64, 0d3FE000000000000B;
	fma.rn.f64 	%fd65, %fd63, %fd46, %fd64;
	mov.f64 	%fd66, 0d3FF0000000000000;
	fma.rn.f64 	%fd67, %fd65, %fd46, %fd66;
	fma.rn.f64 	%fd68, %fd67, %fd46, %fd66;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3, %temp}, %fd68;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd68;
	}
	shl.b32 	%r19, %r2, 20;
	add.s32 	%r20, %r4, %r19;
	mov.b64 	%fd177, {%r3, %r20};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r21}, %fd1;
	}
	mov.b32 	 %f3, %r21;
	abs.f32 	%f1, %f3;
	setp.lt.f32	%p2, %f1, 0f4086232B;
	@%p2 bra 	BB3_4;

	setp.lt.f64	%p3, %fd1, 0d0000000000000000;
	add.f64 	%fd69, %fd1, 0d7FF0000000000000;
	selp.f64	%fd177, 0d0000000000000000, %fd69, %p3;
	setp.geu.f32	%p4, %f1, 0f40874800;
	@%p4 bra 	BB3_4;

	shr.u32 	%r22, %r2, 31;
	add.s32 	%r23, %r2, %r22;
	shr.s32 	%r24, %r23, 1;
	shl.b32 	%r25, %r24, 20;
	add.s32 	%r26, %r25, %r4;
	mov.b64 	%fd70, {%r3, %r26};
	sub.s32 	%r27, %r2, %r24;
	shl.b32 	%r28, %r27, 20;
	add.s32 	%r29, %r28, 1072693248;
	mov.u32 	%r30, 0;
	mov.b64 	%fd71, {%r30, %r29};
	mul.f64 	%fd177, %fd70, %fd71;

BB3_4:
	ld.global.f64 	%fd178, [%rd1+8];
	abs.f64 	%fd72, %fd178;
	setp.neu.f64	%p5, %fd72, 0d7FF0000000000000;
	@%p5 bra 	BB3_6;

	mov.f64 	%fd73, 0d0000000000000000;
	mul.rn.f64 	%fd178, %fd178, %fd73;

BB3_6:
	mul.f64 	%fd74, %fd178, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r57, %fd74;
	add.u64 	%rd7, %SP, 4;
	cvta.to.local.u64 	%rd8, %rd7;
	st.local.u32 	[%rd8], %r57;
	cvt.rn.f64.s32	%fd75, %r57;
	neg.f64 	%fd76, %fd75;
	mov.f64 	%fd77, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd78, %fd76, %fd77, %fd178;
	mov.f64 	%fd79, 0d3C91A62633145C00;
	fma.rn.f64 	%fd80, %fd76, %fd79, %fd78;
	mov.f64 	%fd81, 0d397B839A252049C0;
	fma.rn.f64 	%fd179, %fd76, %fd81, %fd80;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r31}, %fd178;
	}
	and.b32  	%r32, %r31, 2145386496;
	setp.lt.u32	%p6, %r32, 1105199104;
	@%p6 bra 	BB3_8;

	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd178;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd179, [retval0+0];
	
	//{
	}// Callseq End 2
	ld.local.u32 	%r57, [%rd8];

BB3_8:
	add.s32 	%r8, %r57, 1;
	and.b32  	%r33, %r8, 1;
	shl.b32 	%r34, %r33, 3;
	setp.eq.s32	%p7, %r33, 0;
	selp.f64	%fd82, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p7;
	mul.wide.u32 	%rd11, %r34, 8;
	mov.u64 	%rd12, __cudart_sin_cos_coeffs;
	add.s64 	%rd13, %rd11, %rd12;
	ld.const.f64 	%fd83, [%rd13+8];
	mul.rn.f64 	%fd12, %fd179, %fd179;
	fma.rn.f64 	%fd84, %fd82, %fd12, %fd83;
	ld.const.f64 	%fd85, [%rd13+16];
	fma.rn.f64 	%fd86, %fd84, %fd12, %fd85;
	ld.const.f64 	%fd87, [%rd13+24];
	fma.rn.f64 	%fd88, %fd86, %fd12, %fd87;
	ld.const.f64 	%fd89, [%rd13+32];
	fma.rn.f64 	%fd90, %fd88, %fd12, %fd89;
	ld.const.f64 	%fd91, [%rd13+40];
	fma.rn.f64 	%fd92, %fd90, %fd12, %fd91;
	ld.const.f64 	%fd93, [%rd13+48];
	fma.rn.f64 	%fd13, %fd92, %fd12, %fd93;
	fma.rn.f64 	%fd180, %fd13, %fd179, %fd179;
	@%p7 bra 	BB3_10;

	fma.rn.f64 	%fd180, %fd13, %fd12, %fd66;

BB3_10:
	and.b32  	%r35, %r8, 2;
	setp.eq.s32	%p8, %r35, 0;
	@%p8 bra 	BB3_12;

	mov.f64 	%fd95, 0d0000000000000000;
	mov.f64 	%fd96, 0dBFF0000000000000;
	fma.rn.f64 	%fd180, %fd180, %fd96, %fd95;

BB3_12:
	mov.f64 	%fd176, 0d3FE000000000000B;
	mov.f64 	%fd175, 0d3FC5555555555511;
	mov.f64 	%fd171, 0d3FA55555555502A1;
	mov.f64 	%fd170, 0d3F81111111122322;
	mov.f64 	%fd169, 0d3F56C16C1852B7AF;
	mov.f64 	%fd168, 0d3F2A01A014761F65;
	mov.f64 	%fd167, 0d3EFA01997C89EB71;
	mov.f64 	%fd166, 0d3EC71DEE62401315;
	mov.f64 	%fd165, 0d3E928AF3FCA213EA;
	mov.f64 	%fd164, 0d3E5ADE1569CE2BDF;
	mov.f64 	%fd163, 0dBC7ABC9E3B39803F;
	mov.f64 	%fd162, 0dBFE62E42FEFA39EF;
	mov.f64 	%fd161, 0dC338000000000000;
	mov.f64 	%fd160, 0d4338000000000000;
	mov.f64 	%fd159, 0d3FF71547652B82FE;
	cvta.to.global.u64 	%rd14, %rd4;
	add.s64 	%rd2, %rd14, %rd6;
	mul.f64 	%fd97, %fd177, %fd180;
	st.global.f64 	[%rd2], %fd97;
	ld.global.f64 	%fd19, [%rd1];
	mul.rn.f64 	%fd99, %fd19, %fd159;
	add.rn.f64 	%fd101, %fd99, %fd160;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9, %temp}, %fd101;
	}
	add.rn.f64 	%fd103, %fd101, %fd161;
	fma.rn.f64 	%fd105, %fd103, %fd162, %fd19;
	fma.rn.f64 	%fd107, %fd103, %fd163, %fd105;
	fma.rn.f64 	%fd110, %fd164, %fd107, %fd165;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd166;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd167;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd168;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd169;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd170;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd171;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd175;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd176;
	fma.rn.f64 	%fd128, %fd126, %fd107, %fd66;
	fma.rn.f64 	%fd129, %fd128, %fd107, %fd66;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r10, %temp}, %fd129;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r11}, %fd129;
	}
	shl.b32 	%r40, %r9, 20;
	add.s32 	%r41, %r11, %r40;
	mov.b64 	%fd181, {%r10, %r41};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r42}, %fd19;
	}
	mov.b32 	 %f4, %r42;
	abs.f32 	%f2, %f4;
	setp.lt.f32	%p9, %f2, 0f4086232B;
	@%p9 bra 	BB3_15;

	setp.lt.f64	%p10, %fd19, 0d0000000000000000;
	add.f64 	%fd130, %fd19, 0d7FF0000000000000;
	selp.f64	%fd181, 0d0000000000000000, %fd130, %p10;
	setp.geu.f32	%p11, %f2, 0f40874800;
	@%p11 bra 	BB3_15;

	shr.u32 	%r43, %r9, 31;
	add.s32 	%r44, %r9, %r43;
	shr.s32 	%r45, %r44, 1;
	shl.b32 	%r46, %r45, 20;
	add.s32 	%r47, %r46, %r11;
	mov.b64 	%fd131, {%r10, %r47};
	sub.s32 	%r48, %r9, %r45;
	shl.b32 	%r49, %r48, 20;
	add.s32 	%r50, %r49, 1072693248;
	mov.u32 	%r51, 0;
	mov.b64 	%fd132, {%r51, %r50};
	mul.f64 	%fd181, %fd131, %fd132;

BB3_15:
	ld.global.f64 	%fd182, [%rd1+8];
	abs.f64 	%fd133, %fd182;
	setp.neu.f64	%p12, %fd133, 0d7FF0000000000000;
	@%p12 bra 	BB3_17;

	mov.f64 	%fd134, 0d0000000000000000;
	mul.rn.f64 	%fd182, %fd182, %fd134;

BB3_17:
	mov.f64 	%fd174, 0d397B839A252049C0;
	mov.f64 	%fd173, 0d3C91A62633145C00;
	mov.f64 	%fd172, 0d3FF921FB54442D18;
	mul.f64 	%fd135, %fd182, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r58, %fd135;
	add.u64 	%rd16, %SP, 0;
	cvta.to.local.u64 	%rd17, %rd16;
	st.local.u32 	[%rd17], %r58;
	cvt.rn.f64.s32	%fd136, %r58;
	neg.f64 	%fd137, %fd136;
	fma.rn.f64 	%fd139, %fd137, %fd172, %fd182;
	fma.rn.f64 	%fd141, %fd137, %fd173, %fd139;
	fma.rn.f64 	%fd183, %fd137, %fd174, %fd141;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r52}, %fd182;
	}
	and.b32  	%r53, %r52, 2145386496;
	setp.lt.u32	%p13, %r53, 1105199104;
	@%p13 bra 	BB3_19;

	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd182;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd183, [retval0+0];
	
	//{
	}// Callseq End 3
	ld.local.u32 	%r58, [%rd17];

BB3_19:
	and.b32  	%r54, %r58, 1;
	shl.b32 	%r55, %r54, 3;
	setp.eq.s32	%p14, %r54, 0;
	selp.f64	%fd143, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p14;
	mul.wide.u32 	%rd20, %r55, 8;
	add.s64 	%rd22, %rd20, %rd12;
	ld.const.f64 	%fd144, [%rd22+8];
	mul.rn.f64 	%fd30, %fd183, %fd183;
	fma.rn.f64 	%fd145, %fd143, %fd30, %fd144;
	ld.const.f64 	%fd146, [%rd22+16];
	fma.rn.f64 	%fd147, %fd145, %fd30, %fd146;
	ld.const.f64 	%fd148, [%rd22+24];
	fma.rn.f64 	%fd149, %fd147, %fd30, %fd148;
	ld.const.f64 	%fd150, [%rd22+32];
	fma.rn.f64 	%fd151, %fd149, %fd30, %fd150;
	ld.const.f64 	%fd152, [%rd22+40];
	fma.rn.f64 	%fd153, %fd151, %fd30, %fd152;
	ld.const.f64 	%fd154, [%rd22+48];
	fma.rn.f64 	%fd31, %fd153, %fd30, %fd154;
	fma.rn.f64 	%fd184, %fd31, %fd183, %fd183;
	@%p14 bra 	BB3_21;

	fma.rn.f64 	%fd184, %fd31, %fd30, %fd66;

BB3_21:
	and.b32  	%r56, %r58, 2;
	setp.eq.s32	%p15, %r56, 0;
	@%p15 bra 	BB3_23;

	mov.f64 	%fd156, 0d0000000000000000;
	mov.f64 	%fd157, 0dBFF0000000000000;
	fma.rn.f64 	%fd184, %fd184, %fd157, %fd156;

BB3_23:
	mul.f64 	%fd158, %fd181, %fd184;
	st.global.f64 	[%rd2+8], %fd158;

BB3_24:
	ret;
}

.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot4[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<43>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<100>;


	mov.u64 	%rd99, __local_depot4;
	cvta.local.u64 	%SP, %rd99;
	ld.param.f64 	%fd4, [__internal_trig_reduction_slowpathd_param_0];
	ld.param.u64 	%rd37, [__internal_trig_reduction_slowpathd_param_1];
	add.u64 	%rd38, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd38;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd4;
	}
	and.b32  	%r41, %r1, -2147483648;
	shr.u32 	%r3, %r1, 20;
	bfe.u32 	%r4, %r1, 20, 11;
	setp.eq.s32	%p1, %r4, 2047;
	@%p1 bra 	BB4_13;

	add.s32 	%r16, %r4, -1024;
	shr.u32 	%r17, %r16, 6;
	mov.u32 	%r18, 16;
	sub.s32 	%r5, %r18, %r17;
	mov.u32 	%r19, 19;
	sub.s32 	%r20, %r19, %r17;
	mov.u32 	%r21, 18;
	min.s32 	%r6, %r21, %r20;
	setp.gt.s32	%p2, %r5, %r6;
	mov.u64 	%rd93, 0;
	mov.u64 	%rd92, %rd1;
	@%p2 bra 	BB4_4;

	mov.b64 	 %rd41, %fd4;
	shl.b64 	%rd42, %rd41, 11;
	or.b64  	%rd3, %rd42, -9223372036854775808;
	add.s32 	%r7, %r5, -1;
	mov.u64 	%rd91, %rd1;
	bfe.u32 	%r22, %r1, 20, 11;
	add.s32 	%r23, %r22, -1024;
	shr.u32 	%r24, %r23, 6;
	mov.u32 	%r25, 15;
	sub.s32 	%r26, %r25, %r24;
	mul.wide.s32 	%rd43, %r26, 8;
	mov.u64 	%rd44, __cudart_i2opi_d;
	add.s64 	%rd89, %rd44, %rd43;
	mov.u64 	%rd93, 0;
	mov.u64 	%rd90, %rd1;
	mov.u32 	%r40, %r7;

BB4_3:
	.pragma "nounroll";
	mov.u32 	%r8, %r40;
	mov.u64 	%rd7, %rd90;
	ld.const.u64 	%rd47, [%rd89];
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi, clo, chi;
	mov.b64         {alo,ahi}, %rd47;    
	mov.b64         {blo,bhi}, %rd3;    
	mov.b64         {clo,chi}, %rd93;    
	mad.lo.cc.u32   r0, alo, blo, clo;
	madc.hi.cc.u32  r1, alo, blo, chi;
	madc.hi.u32     r2, alo, bhi,   0;
	mad.lo.cc.u32   r1, alo, bhi,  r1;
	madc.hi.cc.u32  r2, ahi, blo,  r2;
	madc.hi.u32     r3, ahi, bhi,   0;
	mad.lo.cc.u32   r1, ahi, blo,  r1;
	madc.lo.cc.u32  r2, ahi, bhi,  r2;
	addc.u32        r3,  r3,   0;     
	mov.b64         %rd45, {r0,r1};      
	mov.b64         %rd93, {r2,r3};      
	}
	// inline asm
	st.local.u64 	[%rd91], %rd45;
	add.s32 	%r9, %r8, 1;
	sub.s32 	%r27, %r9, %r7;
	mul.wide.s32 	%rd50, %r27, 8;
	add.s64 	%rd91, %rd1, %rd50;
	add.s64 	%rd13, %rd7, 8;
	mov.u64 	%rd92, %rd13;
	add.s64 	%rd89, %rd89, 8;
	setp.lt.s32	%p3, %r9, %r6;
	mov.u64 	%rd90, %rd13;
	mov.u32 	%r40, %r9;
	@%p3 bra 	BB4_3;

BB4_4:
	st.local.u64 	[%rd92], %rd93;
	ld.local.u64 	%rd94, [%rd1+16];
	ld.local.u64 	%rd95, [%rd1+24];
	and.b32  	%r10, %r3, 63;
	setp.eq.s32	%p4, %r10, 0;
	@%p4 bra 	BB4_6;

	mov.u32 	%r28, 64;
	sub.s32 	%r29, %r28, %r10;
	shl.b64 	%rd51, %rd95, %r10;
	shr.u64 	%rd52, %rd94, %r29;
	or.b64  	%rd95, %rd51, %rd52;
	shl.b64 	%rd53, %rd94, %r10;
	ld.local.u64 	%rd54, [%rd1+8];
	shr.u64 	%rd55, %rd54, %r29;
	or.b64  	%rd94, %rd55, %rd53;

BB4_6:
	cvta.to.local.u64 	%rd56, %rd37;
	shr.u64 	%rd57, %rd95, 62;
	cvt.u32.u64	%r30, %rd57;
	shr.u64 	%rd58, %rd94, 62;
	shl.b64 	%rd59, %rd95, 2;
	or.b64  	%rd97, %rd59, %rd58;
	shl.b64 	%rd96, %rd94, 2;
	shr.u64 	%rd60, %rd95, 61;
	cvt.u32.u64	%r31, %rd60;
	and.b32  	%r32, %r31, 1;
	add.s32 	%r33, %r32, %r30;
	neg.s32 	%r34, %r33;
	setp.eq.s32	%p5, %r41, 0;
	selp.b32	%r35, %r33, %r34, %p5;
	st.local.u32 	[%rd56], %r35;
	setp.eq.s32	%p6, %r32, 0;
	@%p6 bra 	BB4_8;

	mov.u64 	%rd64, 0;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd64;
	mov.b64         {a2,a3}, %rd64;
	mov.b64         {b0,b1}, %rd96;
	mov.b64         {b2,b3}, %rd97;
	sub.cc.u32      r0, a0, b0; 
	subc.cc.u32     r1, a1, b1; 
	subc.cc.u32     r2, a2, b2; 
	subc.u32        r3, a3, b3; 
	mov.b64         %rd96, {r0,r1};
	mov.b64         %rd97, {r2,r3};
	}
	// inline asm
	xor.b32  	%r41, %r41, -2147483648;

BB4_8:
	clz.b64 	%r42, %rd97;
	setp.eq.s32	%p7, %r42, 0;
	@%p7 bra 	BB4_10;

	shl.b64 	%rd67, %rd97, %r42;
	mov.u32 	%r36, 64;
	sub.s32 	%r37, %r36, %r42;
	shr.u64 	%rd68, %rd96, %r37;
	or.b64  	%rd97, %rd68, %rd67;

BB4_10:
	mov.u64 	%rd72, -3958705157555305931;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi;
	mov.b64         {alo,ahi}, %rd97;   
	mov.b64         {blo,bhi}, %rd72;   
	mul.lo.u32      r0, alo, blo;    
	mul.hi.u32      r1, alo, blo;    
	mad.lo.cc.u32   r1, alo, bhi, r1;
	madc.hi.u32     r2, alo, bhi,  0;
	mad.lo.cc.u32   r1, ahi, blo, r1;
	madc.hi.cc.u32  r2, ahi, blo, r2;
	madc.hi.u32     r3, ahi, bhi,  0;
	mad.lo.cc.u32   r2, ahi, bhi, r2;
	addc.u32        r3, r3,  0;      
	mov.b64         %rd69, {r0,r1};     
	mov.b64         %rd98, {r2,r3};     
	}
	// inline asm
	setp.lt.s64	%p8, %rd98, 1;
	@%p8 bra 	BB4_12;

	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd69;
	mov.b64         {a2,a3}, %rd98;
	mov.b64         {b0,b1}, %rd69;
	mov.b64         {b2,b3}, %rd98;
	add.cc.u32      r0, a0, b0; 
	addc.cc.u32     r1, a1, b1; 
	addc.cc.u32     r2, a2, b2; 
	addc.u32        r3, a3, b3; 
	mov.b64         %rd73, {r0,r1};
	mov.b64         %rd98, {r2,r3};
	}
	// inline asm
	add.s32 	%r42, %r42, 1;

BB4_12:
	cvt.u64.u32	%rd79, %r41;
	shl.b64 	%rd80, %rd79, 32;
	mov.u32 	%r38, 1022;
	sub.s32 	%r39, %r38, %r42;
	cvt.u64.u32	%rd81, %r39;
	shl.b64 	%rd82, %rd81, 52;
	add.s64 	%rd83, %rd98, 1;
	shr.u64 	%rd84, %rd83, 10;
	add.s64 	%rd85, %rd84, 1;
	shr.u64 	%rd86, %rd85, 1;
	add.s64 	%rd87, %rd86, %rd82;
	or.b64  	%rd88, %rd87, %rd80;
	mov.b64 	 %fd4, %rd88;

BB4_13:
	st.param.f64	[func_retval0+0], %fd4;
	ret;
}


